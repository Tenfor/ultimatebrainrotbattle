local events = require("event.events")
local gameEvents = require("main/events/gameEvents")
go.property("animName", hash("lionstrike1"))
go.property("doneEvent", hash("teszt"))
go.property("xOffset", 0)
go.property("yOffset", 0)
go.property("target", hash("enemy"))
go.property("flip", false)

local function onDone(self)
	go.delete()
end

function init(self)
	sprite.play_flipbook("#sprite", hash(self.animName), onDone)
	sprite.set_hflip("#sprite", self.flip)

	if self.animName == hash("hit1") then
		go.set("#sprite", "tint", vmath.vector4(1, 1, 0, 1))
	end
--	events.subscribe(self.doneEvent, callback, callback_context)
end

function final(self)

end

function update(self, dt)
	local target_pos = go.get_position("/enemy")
	
	if self.target == hash("player") then 
		target_pos = go.get_position("/player")
	end
	target_pos.x = target_pos.x + self.xOffset
	target_pos.y = target_pos.y + self.yOffset
	go.set_position(target_pos)
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
