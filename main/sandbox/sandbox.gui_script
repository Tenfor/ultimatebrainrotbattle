local druid = require("druid.druid")
local events = require("event.events")
local gameEvents = require("main/events/gameEvents")
local playerModel = require("main/battle/playerModel")
local enemyModel = require("main/battle/enemyModel")

local function onSahurBtn(self)
	events.trigger(gameEvents.LOAD_SAHUR)
end

local function onPatapimBtn(self)
	events.trigger(gameEvents.LOAD_PATAPIM)
end

local function onCappucinoBtn(self)
	events.trigger(gameEvents.LOAD_CAPPUCINO)
end

local function updatePlayerHpText(self)
	gui.set_text(self.playerHpTextNode, tostring(playerModel.hp).."/"..tostring(playerModel.maxHp))
	self.playerHpBar:set_to(playerModel.hp/playerModel.maxHp)
end

local function updateEnemyHpText(self)
	gui.set_text(self.enemyHpTextNode, tostring(enemyModel.hp).."/"..tostring(enemyModel.maxHp))
	self.enemyHpBar:set_to(enemyModel.hp/enemyModel.maxHp)
end

local function onCharacterLoaded(self)
	updatePlayerHpText(self)
end

local function onEnemyHurt(self,dmg)
	enemyModel.setHp(enemyModel.hp-dmg)
	updateEnemyHpText(self)
end

local function onPlayerHurt(self,dmg)
	playerModel.setHp(playerModel.hp-dmg)
	updatePlayerHpText(self)
end

local function onMenuBtn(self)
	events.trigger(gameEvents.LOAD_SCENE,"menu")
	events.trigger(gameEvents.UNLOAD_SCENE,"sandbox")
end

local function onSkillBtn1(self)
	events.trigger(gameEvents.TRIGGER_SKILL,playerModel.skills[1])
end

local function onSkillBtn2(self)
	events.trigger(gameEvents.TRIGGER_SKILL,playerModel.skills[2])
end

local function onSkillBtn3(self)
	events.trigger(gameEvents.TRIGGER_SKILL,playerModel.skills[3])
end

local function onSkillBtn4(self)
	events.trigger(gameEvents.TRIGGER_SKILL,playerModel.skills[4])
end

local function onSkillBtn5(self)
	events.trigger(gameEvents.TRIGGER_SKILL,playerModel.skills[5])
end

function init(self)
	self.druid = druid.new(self)
	self.sahurBtn = self.druid:new_button("sahurBtn", onSahurBtn)
	self.patapimBtn = self.druid:new_button("patapimBtn", onPatapimBtn)
	self.cappucinoBtn = self.druid:new_button("cappucinoBtn", onCappucinoBtn)
	self.menuBtn = self.druid:new_button("menuBtn", onMenuBtn)

	self.playerHpTextNode = gui.get_node("playerHpText")
	self.enemyHpTextNode = gui.get_node("enemyHpText")

	self.enemyHpBar = self.druid:new_progress("enemyHpBar", "x")
	self.enemyHpBar:set_to(1)

	events.subscribe(gameEvents.CHARACTER_LOADED, onCharacterLoaded, self)
	events.subscribe(gameEvents.ENEMY_HURT, onEnemyHurt, self)
	events.subscribe(gameEvents.PLAYER_HURT, onPlayerHurt, self)

	self.playerHpBar = self.druid:new_progress("playerHpBar", "x")
	self.playerHpBar:set_to(1)

	self.skillBtn1 = self.druid:new_button("skillBtn1", onSkillBtn1)
	self.skillBtn2 = self.druid:new_button("skillBtn2", onSkillBtn2)
	self.skillBtn3 = self.druid:new_button("skillBtn3", onSkillBtn3)
	self.skillBtn4 = self.druid:new_button("skillBtn4", onSkillBtn4)
	self.skillBtn5 = self.druid:new_button("skillBtn5", onSkillBtn5)


end

function final(self)
	self.druid:final()
	events.unsubscribe(gameEvents.CHARACTER_LOADED, onCharacterLoaded, self)
	events.unsubscribe(gameEvents.ENEMY_HURT, onEnemyHurt, self)
	events.unsubscribe(gameEvents.PLAYER_HURT, onPlayerHurt, self)
end

function update(self, dt)
	self.druid:update(dt)
end

function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
	return self.druid:on_input(action_id, action)
end